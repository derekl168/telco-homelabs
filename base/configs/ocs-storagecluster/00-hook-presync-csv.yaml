---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
  name: presync-csv-wait-ocs-job
  # generateName: presync-csv-wait-job-
  namespace: telco-gitops
spec:
  template:
    spec:
      containers:
        - image: registry.redhat.io/openshift4/ose-cli:latest
          command:
            - /bin/bash
            - -c
            - |
              echo "OCS PreSync Hook"
              CSV_STATUS="Pausing $SLEEP seconds..."
              while [ "$CSV_STATUS" != "InstallSucceeded" ]; do
                echo "Waiting for the OCS Operator to be ready. ($CSV_STATUS)"
                sleep $SLEEP
                CSV_STATUS=$( oc get csv -n openshift-storage -l operators.coreos.com/ocs-operator.openshift-storage='' -o jsonpath={..status.conditions[-1:].reason} )
              done
              CSV_STATUS="Pausing $SLEEP seconds..."
              while [ "$CSV_STATUS" != "Available" ]; do
                echo "Waiting for LSo volume set ($CSV_STATUS)"
                sleep $SLEEP
                CSV_STATUS=$( oc get localvolumeset -n openshift-local-storage ocs-local-volume-set -o jsonpath={..status.conditions[-1:].type} )
              done
              # LABEL all nodes
              for i in $(oc get nodes | egrep -v "NAME" | awk '{print $1}')
                do oc label node $i cluster.ocs.openshift.io/openshift-storage=''
              done
              echo "All done! Hooray!"
          imagePullPolicy: IfNotPresent
          name: mcp-wait-job
          env:
          - name: SLEEP
            value: "3"
      dnsPolicy: ClusterFirst
      restartPolicy: OnFailure
      serviceAccount: cli-job-sa
      serviceAccountName: cli-job-sa
      terminationGracePeriodSeconds: 30